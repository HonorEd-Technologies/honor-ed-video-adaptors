/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var HonorPlayer;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/HonorPlayer.js":
/*!*****************************!*\
  !*** ./dist/HonorPlayer.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __esDecorate = (this && this.__esDecorate) || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n};\nvar __runInitializers = (this && this.__runInitializers) || function (thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst HonorEventEmitter_1 = __webpack_require__(/*! ./utils/Shared/HonorEventEmitter */ \"./dist/utils/Shared/HonorEventEmitter.js\");\nconst HonorVideoEvent_1 = __webpack_require__(/*! ./types/Shared/HonorVideoEvent */ \"./dist/types/Shared/HonorVideoEvent.js\");\nconst loadYoutubeAPI_1 = __importDefault(__webpack_require__(/*! ./utils/loadYoutubeAPI */ \"./dist/utils/loadYoutubeAPI.js\"));\nconst YoutubeAdaptor_1 = __webpack_require__(/*! ./adaptors/YouTube/YoutubeAdaptor */ \"./dist/adaptors/YouTube/YoutubeAdaptor.js\");\nconst VideoServiceProvider_1 = __webpack_require__(/*! ./types/Shared/VideoServiceProvider */ \"./dist/types/Shared/VideoServiceProvider.js\");\nconst loadVimeoAPI_1 = __importDefault(__webpack_require__(/*! ./utils/loadVimeoAPI */ \"./dist/utils/loadVimeoAPI.js\"));\nconst VimeoAdaptor_1 = __webpack_require__(/*! ./adaptors/Vimeo/VimeoAdaptor */ \"./dist/adaptors/Vimeo/VimeoAdaptor.js\");\nfunction RequiresInitializationForAllMethods(excludeMethods = []) {\n    return function (Base) {\n        return class extends Base {\n            constructor(...args) {\n                super(...args);\n                // Get all method names of the class prototype\n                const methodNames = Object.getOwnPropertyNames(Base.prototype)\n                    .filter((method) => method !== 'constructor' && // Exclude constructor\n                    !excludeMethods.includes(method) // Exclude specified methods\n                );\n                for (const methodName of methodNames) {\n                    const originalMethod = this[methodName];\n                    if (typeof originalMethod === 'function') {\n                        // Wrap the method with initialization check\n                        this[methodName] = function (...args) {\n                            if (!this.initialized) {\n                                this.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.error, { data: 5 });\n                                throw new Error(`Method ${methodName} called before adaptor was initialized`);\n                            }\n                            return originalMethod.apply(this, args);\n                        };\n                    }\n                }\n            }\n        };\n    };\n}\nlet HonorPlayer = (() => {\n    let _classDecorators = [RequiresInitializationForAllMethods([\n            'setAdaptor',\n            'onReady',\n            'onError',\n            'onCurrentTimeChanged',\n            'onStateChanged',\n            'initializeAdaptor'\n        ])];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    var HonorPlayer = _classThis = class {\n        constructor(elementId, configuration) {\n            this.initialized = false;\n            this.emitter = new HonorEventEmitter_1.HonorVideoEventEmitters();\n            this.destroy = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.destroy(); });\n            this.getCurrentTime = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.getCurrentTime(); });\n            this.getDuration = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.getDuration(); });\n            this.getPlaybackRate = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.getPlaybackRate(); });\n            this.getVideoLoadedFraction = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.getVideoLoadedFraction(); });\n            this.getVolume = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.getVolume(); });\n            this.seekTo = (seconds) => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.seekTo(seconds); });\n            this.setPlaybackRate = (rate) => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.setPlaybackRate(rate); });\n            this.setSize = (width, height) => this.adaptor.setSize(width, height);\n            this.setVolume = (volume) => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.setVolume(volume); });\n            this.playVideo = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.playVideo(); });\n            this.pauseVideo = () => __awaiter(this, void 0, void 0, function* () { return yield this.adaptor.pauseVideo(); });\n            this.initializeAdaptor = (elementId, config) => {\n                switch (config.provider) {\n                    case VideoServiceProvider_1.VideoServiceProvider.youtube:\n                        // load the Youtube Iframe API \n                        (0, loadYoutubeAPI_1.default)(this.emitter)\n                            .then(() => {\n                            const adaptor = (0, YoutubeAdaptor_1.initializeYoutubeAdaptor)(elementId, config, this); // Once iframe is loaded, instantiate YT.Player and return the adaptor\n                            this.setAdaptor(adaptor);\n                        });\n                    case VideoServiceProvider_1.VideoServiceProvider.vimeo:\n                        // load the Vimeo Iframe API\n                        (0, loadVimeoAPI_1.default)()\n                            .then(() => {\n                            const adaptor = (0, VimeoAdaptor_1.initializeVimeoAdaptor)(elementId, config, this); // Once iframe is loaded, instantiate YT.Player and return the adaptor\n                            this.setAdaptor(adaptor);\n                        });\n                }\n            };\n            this.initializeAdaptor(elementId, configuration);\n        }\n        setAdaptor(adaptor) {\n            this.initialized = true;\n            this.adaptor = adaptor;\n        }\n        onReady(callback) { this.emitter.onReady(callback); }\n        onError(callback) { this.emitter.onError(callback); }\n        onCurrentTimeChanged(callback) { this.emitter.onCurrentTimeChange(callback); }\n        onStateChanged(callback) { this.emitter.onStateChange(callback); }\n    };\n    __setFunctionName(_classThis, \"HonorPlayer\");\n    (() => {\n        const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n        __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: \"class\", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);\n        HonorPlayer = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });\n        __runInitializers(_classThis, _classExtraInitializers);\n    })();\n    return HonorPlayer = _classThis;\n})();\nexports[\"default\"] = HonorPlayer;\n//# sourceMappingURL=HonorPlayer.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/HonorPlayer.js?");

/***/ }),

/***/ "./dist/adaptors/Vimeo/VimeoAdaptor.js":
/*!*********************************************!*\
  !*** ./dist/adaptors/Vimeo/VimeoAdaptor.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initializeVimeoAdaptor = void 0;\nconst HonorVideoEvent_1 = __webpack_require__(/*! ../../types/Shared/HonorVideoEvent */ \"./dist/types/Shared/HonorVideoEvent.js\");\nconst HonorVideoPlayerState_1 = __webpack_require__(/*! ../../types/Shared/HonorVideoPlayerState */ \"./dist/types/Shared/HonorVideoPlayerState.js\");\nconst VimeoEvents_1 = __webpack_require__(/*! ../../types/Vimeo/VimeoEvents */ \"./dist/types/Vimeo/VimeoEvents.js\");\nconst convertVimeoPlayer_1 = __importDefault(__webpack_require__(/*! ./convertVimeoPlayer */ \"./dist/adaptors/Vimeo/convertVimeoPlayer.js\"));\nconst initializeVimeoAdaptor = (elementId, honorConfig, player) => {\n    let config = {\n        id: honorConfig.videoId,\n        width: honorConfig.width,\n        height: honorConfig.height,\n        autoplay: true,\n        controls: honorConfig.controls,\n        playsinline: honorConfig.playsInline,\n        vimeo_logo: false\n    };\n    const vimeoPlayer = (0, convertVimeoPlayer_1.default)(elementId, config);\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.ready, () => {\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.playerReady);\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.stateChanged, { data: HonorVideoPlayerState_1.HonorVideoPlayerState.unstarted });\n    });\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.pause, () => {\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.stateChanged, { data: HonorVideoPlayerState_1.HonorVideoPlayerState.paused });\n    });\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.play, () => {\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.stateChanged, { data: HonorVideoPlayerState_1.HonorVideoPlayerState.playing });\n    });\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.buffering, () => {\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.stateChanged, { data: HonorVideoPlayerState_1.HonorVideoPlayerState.buffering });\n    });\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.timeUpdated, ({ seconds }) => {\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.currentTimeChanged, { data: seconds });\n    });\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.ended, () => {\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.stateChanged, { data: HonorVideoPlayerState_1.HonorVideoPlayerState.ended });\n    });\n    vimeoPlayer.on(VimeoEvents_1.VimeoEvent.error, (error) => {\n        console.log(\"ERROR\");\n        console.log(error.message);\n        console.log(error.name);\n    });\n    let adaptor = {\n        destroy: () => vimeoPlayer.destroy(),\n        getCurrentTime: function () {\n            return vimeoPlayer.getCurrentTime();\n        },\n        getDuration: function () {\n            return vimeoPlayer.getDuration();\n        },\n        getPlaybackRate: function () {\n            return vimeoPlayer.getPlaybackRate();\n        },\n        getVideoLoadedFraction: function () {\n            return vimeoPlayer.getVideoLoadedFraction();\n        },\n        getVolume: function () {\n            return vimeoPlayer.getVolume();\n        },\n        loadVideoById: function (videoId, startTime, endTime) {\n            return vimeoPlayer.loadVideoById(videoId, startTime, endTime);\n        },\n        seekTo: function (seconds) {\n            return vimeoPlayer.seekTo(seconds);\n        },\n        setPlaybackRate: function (rate) {\n            return vimeoPlayer.setPlaybackRate(rate);\n        },\n        setSize: function (width, height) {\n            const iFrame = vimeoPlayer.getIframe();\n            if (iFrame) {\n                iFrame.style.width = `${width}px`;\n                iFrame.style.height = `${height}px`;\n            }\n            return Promise.resolve();\n        },\n        setVolume: function (volume) {\n            return vimeoPlayer.setVolume(volume);\n        },\n        playVideo: function () {\n            return vimeoPlayer.playVideo();\n        },\n        pauseVideo: function () {\n            return vimeoPlayer.pauseVideo();\n        }\n    };\n    return adaptor;\n};\nexports.initializeVimeoAdaptor = initializeVimeoAdaptor;\n//# sourceMappingURL=VimeoAdaptor.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/adaptors/Vimeo/VimeoAdaptor.js?");

/***/ }),

/***/ "./dist/adaptors/Vimeo/convertVimeoPlayer.js":
/*!***************************************************!*\
  !*** ./dist/adaptors/Vimeo/convertVimeoPlayer.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = (elementId, config) => {\n    console.log(window.Vimeo);\n    let player = new Vimeo.Player(elementId, config);\n    return {\n        loadVideoById: (id, start_time, end_time) => player.loadVideoById({ id, start_time, end_time }),\n        loadVideoByUrl: (url, start_time, end_time) => player.loadVideoByUrl({ url, start_time, end_time }),\n        playVideo: () => player.play(),\n        pauseVideo: () => player.pause(),\n        seekTo: (seconds) => player.setCurrentTime(seconds),\n        getDuration: () => player.getDuration(),\n        getVideoLoadedFraction: () => player.getVideoLoadedFraction(),\n        setVolume: (volume) => player.setVolume(volume),\n        getVolume: () => player.getVolume(),\n        getPlaybackRate: () => player.getPlaybackRate(),\n        setPlaybackRate: (suggestedRate) => player.setPlaybackRate(suggestedRate),\n        getCurrentTime: () => player.getCurrentTime(),\n        getVideoUrl: () => player.getVideoUrl(),\n        destroy: () => player.destroy(),\n        getIframe: () => document.querySelector('iframe'),\n        on: (event, callback) => player.on(event, callback)\n    };\n};\n//# sourceMappingURL=convertVimeoPlayer.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/adaptors/Vimeo/convertVimeoPlayer.js?");

/***/ }),

/***/ "./dist/adaptors/YouTube/YoutubeAdaptor.js":
/*!*************************************************!*\
  !*** ./dist/adaptors/YouTube/YoutubeAdaptor.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.initializeYoutubeAdaptor = void 0;\nconst convertYTPlayer_1 = __importDefault(__webpack_require__(/*! ./convertYTPlayer */ \"./dist/adaptors/YouTube/convertYTPlayer.js\"));\nconst events_1 = __webpack_require__(/*! ../../utils/YouTube/events */ \"./dist/utils/YouTube/events.js\");\n/**\n * Once the Youtube API is loaded, you can instantiate a player based on an elementId and a configuration object. This function does just that, and returns an object containing methods that interact with the YT.Player.\n * @param elementId The id of the element to contain the iframe\n * @param honorConfig The configuration, storing values to control things like autoplay, the id of the video to play, etc.\n * @param player The HonorPlayer\n * @returns A `HonorVideoAdaptor`, a type exposing methods that, in this case, call the corresponding methods based on Youtube's iFrame API.\n */\nconst initializeYoutubeAdaptor = (elementId, honorConfig, player) => {\n    // Convert `honorConfig` to type `YoutubeConfig`, which will be passed directly into the Youtube video player provided by its iFrame API\n    let config = {\n        height: honorConfig.height,\n        width: honorConfig.width,\n        videoId: honorConfig.videoId,\n        playerVars: {\n            autoPlay: honorConfig.autoplay ? 1 : 0,\n            controls: honorConfig.controls ? 1 : 0,\n            fs: honorConfig.fullscreenEnabled ? 1 : 0,\n            playsInline: honorConfig.playsInline ? 1 : 0\n        }\n    };\n    // set up event handling, mapping YoutubeEvents to HonorVideoEvents, then sending them to the emitter\n    config.events = (0, events_1.youtubeEventHandler)(player);\n    // instantiate YT.Player\n    const YTPlayer = (0, convertYTPlayer_1.default)(elementId, config);\n    // construct HonorVideoAdaptor, using the Youtube-specific methods on the YT.Player\n    let adaptor = {\n        destroy: () => Promise.resolve(YTPlayer.destroy()),\n        getCurrentTime: function () {\n            return Promise.resolve(YTPlayer.getCurrentTime());\n        },\n        getDuration: function () {\n            return Promise.resolve(YTPlayer.getDuration());\n        },\n        getPlaybackRate: function () {\n            return Promise.resolve(YTPlayer.getPlaybackRate());\n        },\n        getVideoLoadedFraction: function () {\n            return Promise.resolve(YTPlayer.getVideoLoadedFraction());\n        },\n        getVolume: function () {\n            return Promise.resolve(YTPlayer.getVolume());\n        },\n        loadVideoById: function (videoId, startTime, endTime) {\n            return Promise.resolve(YTPlayer.loadVideoById(videoId, startTime, endTime));\n        },\n        seekTo: function (seconds) {\n            return Promise.resolve(YTPlayer.seekTo(seconds, true));\n        },\n        setPlaybackRate: function (rate) {\n            return Promise.resolve(YTPlayer.setPlaybackRate(rate));\n        },\n        setSize: function (width, height) {\n            return Promise.resolve(YTPlayer.setSize(width.toString(), height.toString()));\n        },\n        setVolume: function (volume) {\n            return Promise.resolve(YTPlayer.setVolume(volume));\n        },\n        playVideo: function () {\n            return Promise.resolve(YTPlayer.playVideo());\n        },\n        pauseVideo: function () {\n            return Promise.resolve(YTPlayer.pauseVideo());\n        }\n    };\n    return adaptor;\n};\nexports.initializeYoutubeAdaptor = initializeYoutubeAdaptor;\n//# sourceMappingURL=YoutubeAdaptor.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/adaptors/YouTube/YoutubeAdaptor.js?");

/***/ }),

/***/ "./dist/adaptors/YouTube/convertYTPlayer.js":
/*!**************************************************!*\
  !*** ./dist/adaptors/YouTube/convertYTPlayer.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = (elementId, config) => {\n    let player = new YT.Player(elementId, config);\n    return {\n        loadVideoById: (videoId, startSeconds, endSeconds) => player.loadVideoById({ videoId, startSeconds, endSeconds }),\n        loadVideoByUrl: (mediaContentUrl, startSeconds, endSeconds) => player.loadVideoByUrl({ mediaContentUrl, startSeconds, endSeconds }),\n        playVideo: () => player.playVideo(),\n        pauseVideo: () => player.pauseVideo(),\n        stopVideo: () => player.stopVideo(),\n        seekTo: (seconds, allowSeekAhead) => player.seekTo(seconds, allowSeekAhead),\n        getDuration: () => player.getDuration(),\n        getVideoLoadedFraction: () => player.getVideoLoadedFraction(),\n        setVolume: (volume) => player.setVolume(volume),\n        getVolume: () => player.getVolume(),\n        getPlaybackRate: () => player.getPlaybackRate(),\n        setPlaybackRate: (suggestedRate) => player.setPlaybackRate(suggestedRate),\n        getAvailablePlaybackRates: () => player.getAvailablePlaybackRates(),\n        getCurrentTime: () => player.getCurrentTime(),\n        getVideoUrl: () => player.getVideoUrl(),\n        destroy: () => player.destroy(),\n        setSize: (width, height) => player.setSize(width, height),\n        getIframe: () => player.getIframe()\n    };\n};\n//# sourceMappingURL=convertYTPlayer.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/adaptors/YouTube/convertYTPlayer.js?");

/***/ }),

/***/ "./dist/types/Shared/HonorVideoError.js":
/*!**********************************************!*\
  !*** ./dist/types/Shared/HonorVideoError.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HonorVideoErrorType = void 0;\nvar HonorVideoErrorType;\n(function (HonorVideoErrorType) {\n    HonorVideoErrorType[HonorVideoErrorType[\"playerError\"] = 1] = \"playerError\";\n    HonorVideoErrorType[HonorVideoErrorType[\"notFound\"] = 2] = \"notFound\";\n    HonorVideoErrorType[HonorVideoErrorType[\"notInitialized\"] = 3] = \"notInitialized\";\n    HonorVideoErrorType[HonorVideoErrorType[\"apiLoadError\"] = 4] = \"apiLoadError\";\n    HonorVideoErrorType[HonorVideoErrorType[\"adaptorLayerError\"] = 5] = \"adaptorLayerError\";\n    HonorVideoErrorType[HonorVideoErrorType[\"invalidPermissions\"] = 6] = \"invalidPermissions\";\n    HonorVideoErrorType[HonorVideoErrorType[\"unknown\"] = -1] = \"unknown\";\n})(HonorVideoErrorType || (exports.HonorVideoErrorType = HonorVideoErrorType = {}));\n//# sourceMappingURL=HonorVideoError.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/types/Shared/HonorVideoError.js?");

/***/ }),

/***/ "./dist/types/Shared/HonorVideoEvent.js":
/*!**********************************************!*\
  !*** ./dist/types/Shared/HonorVideoEvent.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HonorVideoEvent = void 0;\nvar HonorVideoEvent;\n(function (HonorVideoEvent) {\n    HonorVideoEvent[HonorVideoEvent[\"playerReady\"] = 0] = \"playerReady\";\n    HonorVideoEvent[HonorVideoEvent[\"stateChanged\"] = 1] = \"stateChanged\";\n    HonorVideoEvent[HonorVideoEvent[\"error\"] = 2] = \"error\";\n    HonorVideoEvent[HonorVideoEvent[\"currentTimeChanged\"] = 3] = \"currentTimeChanged\";\n})(HonorVideoEvent || (exports.HonorVideoEvent = HonorVideoEvent = {}));\n//# sourceMappingURL=HonorVideoEvent.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/types/Shared/HonorVideoEvent.js?");

/***/ }),

/***/ "./dist/types/Shared/HonorVideoPlayerState.js":
/*!****************************************************!*\
  !*** ./dist/types/Shared/HonorVideoPlayerState.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HonorVideoPlayerState = void 0;\nvar HonorVideoPlayerState;\n(function (HonorVideoPlayerState) {\n    HonorVideoPlayerState[HonorVideoPlayerState[\"unstarted\"] = 0] = \"unstarted\";\n    HonorVideoPlayerState[HonorVideoPlayerState[\"ended\"] = 1] = \"ended\";\n    HonorVideoPlayerState[HonorVideoPlayerState[\"playing\"] = 2] = \"playing\";\n    HonorVideoPlayerState[HonorVideoPlayerState[\"paused\"] = 3] = \"paused\";\n    HonorVideoPlayerState[HonorVideoPlayerState[\"buffering\"] = 4] = \"buffering\";\n})(HonorVideoPlayerState || (exports.HonorVideoPlayerState = HonorVideoPlayerState = {}));\n//# sourceMappingURL=HonorVideoPlayerState.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/types/Shared/HonorVideoPlayerState.js?");

/***/ }),

/***/ "./dist/types/Shared/VideoServiceProvider.js":
/*!***************************************************!*\
  !*** ./dist/types/Shared/VideoServiceProvider.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VideoServiceProvider = void 0;\nvar VideoServiceProvider;\n(function (VideoServiceProvider) {\n    VideoServiceProvider[\"youtube\"] = \"youtube\";\n    VideoServiceProvider[\"vimeo\"] = \"vimeo\";\n})(VideoServiceProvider || (exports.VideoServiceProvider = VideoServiceProvider = {}));\n//# sourceMappingURL=VideoServiceProvider.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/types/Shared/VideoServiceProvider.js?");

/***/ }),

/***/ "./dist/types/Vimeo/VimeoEvents.js":
/*!*****************************************!*\
  !*** ./dist/types/Vimeo/VimeoEvents.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VimeoEvent = void 0;\nvar VimeoEvent;\n(function (VimeoEvent) {\n    VimeoEvent[\"ready\"] = \"loaded\";\n    VimeoEvent[\"play\"] = \"play\";\n    VimeoEvent[\"pause\"] = \"pause\";\n    VimeoEvent[\"buffering\"] = \"bufferstart\";\n    VimeoEvent[\"timeUpdated\"] = \"timeupdate\";\n    VimeoEvent[\"ended\"] = \"ended\";\n    VimeoEvent[\"error\"] = \"error\";\n})(VimeoEvent || (exports.VimeoEvent = VimeoEvent = {}));\n//# sourceMappingURL=VimeoEvents.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/types/Vimeo/VimeoEvents.js?");

/***/ }),

/***/ "./dist/types/YouTube/YouTubeEvents.js":
/*!*********************************************!*\
  !*** ./dist/types/YouTube/YouTubeEvents.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.YoutubeError = exports.YoutubePlayerState = void 0;\n/**\n * Youtube's iFrame API passes changes to the state of its video player in the form of a number. See [here](https://developers.google.com/youtube/iframe_api_reference#onStateChange) for more info.\n */\nvar YoutubePlayerState;\n(function (YoutubePlayerState) {\n    YoutubePlayerState[YoutubePlayerState[\"unstarted\"] = -1] = \"unstarted\";\n    YoutubePlayerState[YoutubePlayerState[\"ended\"] = 0] = \"ended\";\n    YoutubePlayerState[YoutubePlayerState[\"playing\"] = 1] = \"playing\";\n    YoutubePlayerState[YoutubePlayerState[\"paused\"] = 2] = \"paused\";\n    YoutubePlayerState[YoutubePlayerState[\"buffering\"] = 3] = \"buffering\";\n    YoutubePlayerState[YoutubePlayerState[\"videoCued\"] = 5] = \"videoCued\";\n})(YoutubePlayerState || (exports.YoutubePlayerState = YoutubePlayerState = {}));\n/**\n * Youtube's iFrame API passes error data in the form of a number. See [here](https://developers.google.com/youtube/iframe_api_reference#onError) for more info.\n */\nvar YoutubeError;\n(function (YoutubeError) {\n    YoutubeError[YoutubeError[\"invalidParameter\"] = 2] = \"invalidParameter\";\n    YoutubeError[YoutubeError[\"playerError\"] = 5] = \"playerError\";\n    YoutubeError[YoutubeError[\"notFound\"] = 100] = \"notFound\";\n    YoutubeError[YoutubeError[\"invalidPermissions\"] = 101] = \"invalidPermissions\";\n    YoutubeError[YoutubeError[\"invalidPermissionsAlt\"] = 150] = \"invalidPermissionsAlt\";\n    YoutubeError[YoutubeError[\"apiLoadError\"] = 400] = \"apiLoadError\";\n})(YoutubeError || (exports.YoutubeError = YoutubeError = {}));\n//# sourceMappingURL=YouTubeEvents.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/types/YouTube/YouTubeEvents.js?");

/***/ }),

/***/ "./dist/utils/Shared/HonorEventEmitter.js":
/*!************************************************!*\
  !*** ./dist/utils/Shared/HonorEventEmitter.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HonorVideoEventEmitters = void 0;\nconst HonorVideoEvent_1 = __webpack_require__(/*! ../../types/Shared/HonorVideoEvent */ \"./dist/types/Shared/HonorVideoEvent.js\");\nclass HonorVideoEventEmitter {\n    constructor() {\n        this.callbacks = [];\n    }\n    on(callback) {\n        this.callbacks.push(callback);\n        return () => {\n            const idx = this.callbacks.indexOf(callback);\n            if (idx !== -1) {\n                this.callbacks.splice(idx, 1);\n            }\n        };\n    }\n    emit(data) {\n        for (const callback of this.callbacks) {\n            callback(data);\n        }\n    }\n}\nclass HonorVideoEventEmitters {\n    constructor() {\n        this.stateChangeEmitter = new HonorVideoEventEmitter();\n        this.readyEmitter = new HonorVideoEventEmitter();\n        this.errorEmitter = new HonorVideoEventEmitter();\n        this.currentTimeEmitter = new HonorVideoEventEmitter();\n        this.onReady = (callback) => this.readyEmitter.on(callback);\n        this.onStateChange = (callback) => this.stateChangeEmitter.on(callback);\n        this.onError = (callback) => this.errorEmitter.on(callback);\n        this.onCurrentTimeChange = (callback) => this.currentTimeEmitter.on(callback);\n        this.triggerEvent = (event, { data } = {}) => {\n            switch (event) {\n                case HonorVideoEvent_1.HonorVideoEvent.playerReady:\n                    this.readyEmitter.emit();\n                    break;\n                case HonorVideoEvent_1.HonorVideoEvent.stateChanged:\n                    if (data) {\n                        this.stateChangeEmitter.emit(data);\n                    }\n                    break;\n                case HonorVideoEvent_1.HonorVideoEvent.error:\n                    if (data) {\n                        this.errorEmitter.emit(data);\n                    }\n                    break;\n                case HonorVideoEvent_1.HonorVideoEvent.currentTimeChanged:\n                    if (data) {\n                        this.currentTimeEmitter.emit(data);\n                    }\n            }\n        };\n    }\n}\nexports.HonorVideoEventEmitters = HonorVideoEventEmitters;\n//# sourceMappingURL=HonorEventEmitter.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/utils/Shared/HonorEventEmitter.js?");

/***/ }),

/***/ "./dist/utils/YouTube/events.js":
/*!**************************************!*\
  !*** ./dist/utils/YouTube/events.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.youtubeEventHandler = void 0;\nconst HonorVideoError_1 = __webpack_require__(/*! ../../types/Shared/HonorVideoError */ \"./dist/types/Shared/HonorVideoError.js\");\nconst HonorVideoEvent_1 = __webpack_require__(/*! ../../types/Shared/HonorVideoEvent */ \"./dist/types/Shared/HonorVideoEvent.js\");\nconst HonorVideoPlayerState_1 = __webpack_require__(/*! ../../types/Shared/HonorVideoPlayerState */ \"./dist/types/Shared/HonorVideoPlayerState.js\");\nconst YouTubeEvents_1 = __webpack_require__(/*! ../../types/YouTube/YouTubeEvents */ \"./dist/types/YouTube/YouTubeEvents.js\");\nconst parseYTPlayerState = (state) => {\n    switch (state) {\n        case YouTubeEvents_1.YoutubePlayerState.unstarted:\n            return HonorVideoPlayerState_1.HonorVideoPlayerState.unstarted;\n        case YouTubeEvents_1.YoutubePlayerState.playing:\n            return HonorVideoPlayerState_1.HonorVideoPlayerState.playing;\n        case YouTubeEvents_1.YoutubePlayerState.paused:\n            return HonorVideoPlayerState_1.HonorVideoPlayerState.paused;\n        case YouTubeEvents_1.YoutubePlayerState.buffering:\n            return HonorVideoPlayerState_1.HonorVideoPlayerState.buffering;\n        case YouTubeEvents_1.YoutubePlayerState.ended:\n            return HonorVideoPlayerState_1.HonorVideoPlayerState.ended;\n        case YouTubeEvents_1.YoutubePlayerState.videoCued:\n            return undefined; // unneeded for our purposes\n    }\n};\nconst parseYTPlayerError = (error) => {\n    switch (error) {\n        case YouTubeEvents_1.YoutubeError.apiLoadError:\n            return HonorVideoError_1.HonorVideoErrorType.apiLoadError;\n        case YouTubeEvents_1.YoutubeError.invalidPermissions, YouTubeEvents_1.YoutubeError.invalidPermissionsAlt:\n            return HonorVideoError_1.HonorVideoErrorType.invalidPermissions;\n        case YouTubeEvents_1.YoutubeError.invalidParameter:\n            return HonorVideoError_1.HonorVideoErrorType.playerError;\n        case YouTubeEvents_1.YoutubeError.playerError:\n            return HonorVideoError_1.HonorVideoErrorType.playerError;\n        case YouTubeEvents_1.YoutubeError.notFound:\n            return HonorVideoError_1.HonorVideoErrorType.notFound;\n        default:\n            return HonorVideoError_1.HonorVideoErrorType.unknown;\n    }\n};\nconst youtubeStateChangeHandler = (player) => {\n    // youtube has no event for updating the current time of the video, so we need to set up an interval to publish the event\n    let timePoll;\n    const startTimePoll = () => {\n        timePoll = setInterval(() => {\n            const time = player.getCurrentTime();\n            player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.currentTimeChanged, { data: time });\n        }, 500);\n    };\n    const onStateChange = ({ data }) => {\n        const castData = data;\n        if (!castData) { // if the raw youtube player state cannot be converted into `YoutubePlayerState`, there is a state that we have not accounted for and we should emit an error\n            player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.error, {\n                data: {\n                    type: HonorVideoError_1.HonorVideoErrorType.adaptorLayerError,\n                    message: `Unknown player state received: ${data}`\n                }\n            });\n            return;\n        }\n        // convert the `YoutubePlayerState` into an `HonorVideoPlayerState`\n        const honorPlayerState = parseYTPlayerState(castData);\n        if (!honorPlayerState) {\n            player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.error, {\n                data: {\n                    type: HonorVideoError_1.HonorVideoErrorType.adaptorLayerError,\n                    message: `Could not convert Youtube player event: ${castData} into Honor Event`\n                }\n            });\n            return;\n        }\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.stateChanged, { data: honorPlayerState });\n        if (timePoll !== undefined && (YouTubeEvents_1.YoutubePlayerState.ended === data || YouTubeEvents_1.YoutubePlayerState.unstarted === data)) {\n            // if we are polling for the current time and the video has ended or is unplayed, we should cancel the interval polling for the elapsed time\n            clearInterval(timePoll);\n        }\n        else if (timePoll === undefined) {\n            // if there is no interval and the video is playing or paused, start the interval polling\n            startTimePoll();\n        }\n    };\n    return onStateChange;\n};\nconst youtubeErrorHandler = (player) => {\n    return ({ data }) => {\n        var castData = data;\n        var error = HonorVideoError_1.HonorVideoErrorType.unknown;\n        if (castData) {\n            error = parseYTPlayerError(castData);\n        }\n        player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.error, { data: { type: error } });\n    };\n};\n/**\n * Youtube's video player does event handling based on an object attached to the initial configuration object of the following format:\n * {\n *  onReady: () => void,\n *  onStateChange: ({ data: any }) => void,\n *  onError: ({ data: any }) => void\n * }\n * This function takes in an HonorPlayer and returns an object conforming to the above, with each property a function that:\n * 1. Processes raw object events coming from the Youtube API ({ data: any })\n * 2. Converts them into TS types specific to Youtube e.g. ({ data: any }) => YoutubePlayerState\n * 3. Converts those into the appropriate Honor type e.g. (YoutubePlayerState) => HonorVideoPlayerState\n * 4. Sends those into the player's event emitter.\n * @param player the HonorPlayer\n * @returns an object containing the functions passed into the YT.Player\n */\nconst youtubeEventHandler = (player) => {\n    const onReady = () => { player.emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.playerReady); };\n    const onStateChange = youtubeStateChangeHandler(player);\n    const onError = youtubeErrorHandler(player);\n    return {\n        onReady,\n        onStateChange,\n        onError\n    };\n};\nexports.youtubeEventHandler = youtubeEventHandler;\n//# sourceMappingURL=events.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/utils/YouTube/events.js?");

/***/ }),

/***/ "./dist/utils/loadVimeoAPI.js":
/*!************************************!*\
  !*** ./dist/utils/loadVimeoAPI.js ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = () => {\n    const iFrameReadyPromise = new Promise((resolve, reject) => {\n        const tag = document.createElement('script');\n        tag.src = \"https://player.vimeo.com/api/player.js\";\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        tag.onload = () => resolve();\n        if (firstScriptTag.parentNode) {\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        }\n    });\n    return iFrameReadyPromise;\n};\n//# sourceMappingURL=loadVimeoAPI.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/utils/loadVimeoAPI.js?");

/***/ }),

/***/ "./dist/utils/loadYoutubeAPI.js":
/*!**************************************!*\
  !*** ./dist/utils/loadYoutubeAPI.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst HonorVideoError_1 = __webpack_require__(/*! ../types/Shared/HonorVideoError */ \"./dist/types/Shared/HonorVideoError.js\");\nconst HonorVideoEvent_1 = __webpack_require__(/*! ../types/Shared/HonorVideoEvent */ \"./dist/types/Shared/HonorVideoEvent.js\");\nexports[\"default\"] = (emitter) => {\n    const iFrameReadyPromise = new Promise((resolve, reject) => {\n        if (window.YT && window.YT.Player && window.YT.Player instanceof Function) {\n            // youtube iframe already loaded, resolve\n            resolve();\n            return;\n        }\n        const tag = document.createElement('script');\n        tag.src = \"https://www.youtube.com/iframe_api\";\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        if (firstScriptTag.parentNode) {\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        }\n        window.onYouTubeIframeAPIReady = () => {\n            if (window.YT !== undefined && window.YT.Player && window.YT.Player instanceof Function) {\n                resolve();\n            }\n            else {\n                const errorMessage = \"There was a problem loading the YouTube Iframe API\";\n                emitter.triggerEvent(HonorVideoEvent_1.HonorVideoEvent.error, {\n                    data: {\n                        code: HonorVideoError_1.HonorVideoErrorType.apiLoadError,\n                        message: errorMessage\n                    }\n                });\n                reject(errorMessage);\n            }\n        };\n    });\n    return iFrameReadyPromise;\n};\n//# sourceMappingURL=loadYoutubeAPI.js.map\n\n//# sourceURL=webpack://HonorPlayer/./dist/utils/loadYoutubeAPI.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./dist/HonorPlayer.js");
/******/ 	HonorPlayer = __webpack_exports__["default"];
/******/ 	
/******/ })()
;